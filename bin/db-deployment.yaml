apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-claim # name of PVC essential for identifying the storage data
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   # This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    # This will tell kubernetes about the amount of space we are trying to claim.
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: movie
  labels:
    app: mysql
    tier: database
spec:
  selector:
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      containers:
        - image: mysql:5.7
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"

            - name: MYSQL_DATABASE
              value: "movie-ticket"

            - name: MYSQL_USER
              value: "netcon"

            - name: MYSQL_PASSWORD
              value: "netcon"

          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pvc-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql  # DNS name
  namespace: movie
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod should contain the same labels
    app: mysql
    tier: database
  clusterIP: None  # We use DNS, thus ClusterIP is not relevant
